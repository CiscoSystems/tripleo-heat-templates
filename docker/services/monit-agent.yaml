heat_template_version: queens

description: >
  Puppet Monit agent configuration for use with Dockerized monit
  Uses echoes/puppet-monit.

parameters:

  DockerMonitAgentImage:
    description: image
    type: string
  DockerMonitAgentConfigImage:
    description: The container image to use for the monit agent config_volume
    type: string
  MonitUser:
    type: string
    description: Monit server Username
    default: ''
  MonitPassword:
    type: string
    description: Monit server Password
    default:
    hidden: true
  MonitEnable:
    type: boolean
    description: Enable monit at boot
    default: true
  MonitEnsure:
    type: string
    description: Runtime status, either 'running' or 'stopped'
    default: 'running'
  MonitHttpServer:
    type: boolean
    description: Enable default monit http server
    default: true
  MonitHttpServerPort:
    type: number
    description: Monit http server port
    default: 2812
  MonitBindAddress:
    type: string
    description: |
      Interface address to which the Monit server will bind to.
      Defaults to system management IP
    default: '"%{::ipaddress}"'
  MonitAllow:
    type: json
    description: |
      A JSON list of allow statement for expressing restriction on access to the http server. See monit docs.
      NOTE: As a convenience Username and password, although belonging to the 'allow' set are being set in TripleO
      using their dedicated parameters.
    default: []
  MonitChecks:
    description: |
      A JSON dict containing the generic checked types configuration.
      Configuration of each type is specific to that type.
      See https://github.com/sbitio/puppet-monit/blob/master/README.md
    type: json
    default: {}
  MonitCheckInterval:
    type: number
    description: Monit check interval
    default: 30
  MonitStartDelay:
    type: number
    description: Monit start delay
    default: 60
  MonitEventqueue:
    type: boolean
    description: Enable or disable the event queue
    default: true
  MonitConfFile:
    type: string
    description: Monit config file
    default: '/etc/monitrc'
  MonitConfDir:
    type: string
    description: Monit config dir
    default: '/etc/monit.d'
  MonitSystemCheck:
    type: string
    description: |
      Enable default system monitoring config. Either 'present' or 'absent'
    default: "absent"
  MonitLogFile:
    type: string
    description: Path to monit's log file. Set to 'syslog' to use syslog
    default: 'syslog'
  MonitSSL:
    type: boolean
    description: Enable or disable monit SSL transport
    default: true
  MonitSSLPemFile:
    type: string
    description: Path to monit's the PEM file for use with SSL.
    default: ''
  MonitPurgeConfig:
    type: boolean
    description: Enable or disable purge of existing config files
    default: false
  MonitRawConfig:
    description: |
      A JSON list containing raw configuration that will be directly placed in the monit configuration
    type: string
    default: ''

  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  ServiceNetMap:
    default: {}
    description: >
      Mapping of service_name -> network name. Typically set
      via parameter_defaults in the resource registry.  This
      mapping overrides those in ServiceNetMapDefaults.
    type: json
  EndpointMap:
    default: {}
    description: >
      Mapping of service endpoint -> protocol. Typically set
      via parameter_defaults in the resource registry.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  UpgradeRemoveUnusedPackages:
    default: false
    description: Remove package if the service is being disabled during upgrade
    type: boolean

resources:

  ContainersCommon:
    type: ./containers-common.yaml

  MonitAgentBase:
    type: ../../puppet/services/monit-agent.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}


outputs:
  role_data:
    description: Role data for Monit Agent dockerized service
    value:
      service_name: {get_attr: [MonitAgentBase, role_data, service_name]}
      config_settings: {get_attr: [MonitAgentBase, role_data, config_settings]}
      logging_source: {get_attr: [MonitAgentBase, role_data, logging_source]}
      logging_groups: {get_attr: [MonitAgentBase, role_data, logging_groups]}
      step_config: &step_config
        get_attr: [MonitAgentBase, role_data, step_config]
      puppet_config:
        config_volume: monit_agent
        puppet_tags: monit
        step_config: *step_config
        config_image: {get_param: MonitAgentConfigImage}
      kolla_config:
        /var/lib/kolla/config_files/monit_agent.json:
          command: /usr/bin/monit -I
          config_files:
            - source: "/var/lib/kolla/config_files/src/*"
              dest: "/"
              merge: true
              preserve_properties: true
          permissions:
            - path: /etc/ssl/certs/monit.pem
              owner:
                list_join: [':', [{get_param: MonitUser}, 'monit-ro' ]]
              recurse: true
      docker_config:
        step_4:
          monit_vts_agent:
            start_order: 10
            image: {get_param: MonitAgentImage}
            net: host
            pid: host
            privileged: true
            restart: always
            volumes:
              list_concat:
                - {get_attr: [ContainersCommon, volumes]}
                -
                  - /var/lib/kolla/config_files/neutron_vts_agent.json:/var/lib/kolla/config_files/config.json:ro
                  - /var/lib/config-data/puppet-generated/neutron/:/var/lib/kolla/config_files/src:ro
            environment:
              - KOLLA_CONFIG_STRATEGY=COPY_ALWAYS
      host_prep_tasks:
        # Ansible tasks to prepare the host
      upgrade_tasks:
        - name: Check if monit agent is deployed
          command: systemctl is-enabled --quiet monit
          tags: common
          ignore_errors: True
          register: monit_agent_enabled
        - name: "PreUpgrade step0,validation: Check service monit-agent is running"
          command: systemctl is-active --quiet monit
          when: monit_agent_enabled.rc == 0
          tags: step0,validation
        - name: Stop and disable monit-agent service
          tags: step2
          when: monit_agent_enabled.rc == 0
          service: name=monit state=stopped enabled=no
        - name: Remove monits-agent package if operator requests it
          yum: name=monit state=removed
          tags: step2
          ignore_errors: True
          when: {get_param: UpgradeRemoveUnusedPackages}












outputs:
  role_data:
    description: Role Data for the Monit agent service.
    value:
      service_name: monit_agent
      config_settings:
        monit::httpd_user: {get_param: MonitUser}
        monit::httpd_password: {get_param: MonitPassword}
        monit::service_enable: {get_param: MonitEnable}
        monit::service_ensure: {get_param: MonitEnsure}
        monit::httpd: {get_param: MonitHttpServer}
        monit::httpd_address: {get_param: MonitBindAddress}
        monit::httpd_port: {get_param: MonitHttpServerPort}
        monit::check_interval: {get_param: MonitCheckInterval}
        monit::start_delay: {get_param: MonitStartDelay}
        monit::config_file: {get_param: MonitConfFile}
        monit::config_dir: {get_param: MonitConfDir}
        monit::logfile: {get_param: MonitLogFile}
        monit::httpd_ssl: {get_param: MonitSSL}
        monit::httpd_pemfile: {get_param: MonitSSLPemFile}
        tripleo::monit::raw_config: {get_param: MonitRawConfig}
        monit::config_dir_purge: {get_param: MonitPurgeConfig}
        #monit::eventqueue: {get_param: MonitEventqueue}
        #monit::system_check_ensure: {get_param: MonitSystemCheck}
        tripleo.monit_agent.firewall_rules:
          '256 monit agent':
            dport:
              - {get_param: MonitHttpServerPort}
            proto: tcp
            action: accept
      step_config: |
        include ::tripleo::profile::base::monit_agent
